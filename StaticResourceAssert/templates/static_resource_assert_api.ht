
////////////////////////////////////////////////////////////////////////////////////////////////
/*
${GenerationComment}
*/

#include <string_view>

namespace sra {

constexpr size_t __api_array_${ArrayID}_size = ${ArraySize};
const constexpr char* const __api_array_${ArrayID}[__api_array_${ArrayID}_size] = {
	${ResourceFiles}
};

constexpr bool __static_find(const std::string_view target) {
    size_t left = 0;
    size_t right = __api_array_${ArrayID}_size - 1;

    while (left <= right) {
        size_t mid = left + (right - left) / 2;

        if (std::string_view(__api_array_${ArrayID}[mid]) == target) {
            return true;
        } else if (std::string_view(__api_array_${ArrayID}[mid]) < target) {
            left = mid + 1;
        } else {
            right = mid - 1;
        }
    }
    return false;
}

} // namespace sra

////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////// STATIC RESOURCE ASSERT API

#define STATIC_RESOURCE_ASSERT( s ) static_assert( sra::__static_find(u8 ## s) )

#define STATIC_RESOURCE_ASSERT_MSG( s, msg ) static_assert( sra::__static_find(u8 ## s), msg )

#define STATIC_RESOURCE_FIND( s ) sra::__static_find(u8 ## s)

