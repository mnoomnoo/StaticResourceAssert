name: Build StaticResourceAssert

on:
  push:
  workflow_dispatch:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE_RELEASE: Release
  # BUILD_TYPE_DEBUG: Debug
  # ACTIONS_RUNNER_DEBUG: true

jobs:
  build-ubuntu:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Configure CMake Release

      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE_RELEASE}}

    - name: Build SRA
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE_RELEASE}} --target sra

    - name: Run SRA for Unit Tests
      working-directory: ${{github.workspace}}
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ./build/StaticResourceAssert/sra -d ${{github.workspace}}/StaticResourceAssertUnitTests/exampleDirectory -o ${{github.workspace}}/StaticResourceAssertUnitTests/static_resource_assert_api.h

    - name: Build Unit Tests
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE_RELEASE}} --target StaticResourceAssertUnitTests

    - name: Run Release Unit Tests
      working-directory: ${{github.workspace}}/build/StaticResourceAssertUnitTests/
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ./StaticResourceAssertUnitTests

    - name: Create build directories
      run: |
        cp build/StaticResourceAssert/sra .

    - name: Create release artifact
      uses: actions/upload-artifact@v4
      with:
        name: sra-release
        path: |
            Readme.md
            License.txt
            sra
            StaticResourceAssert/templates/*
        retention-days: 1

  build-windows:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Configure CMake Release
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}\build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE_RELEASE}}

    - name: Build SRA
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}\build --config ${{env.BUILD_TYPE_RELEASE}} --target sra

    - name: Run SRA for Unit Tests
      working-directory: ${{github.workspace}}
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: .\build\StaticResourceAssert\Release\sra.exe -d ${{github.workspace}}\StaticResourceAssertUnitTests\exampleDirectory -o ${{github.workspace}}\StaticResourceAssertUnitTests\static_resource_assert_api.h

    - name: Build Unit Tests
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}\build --config ${{env.BUILD_TYPE_RELEASE}} --target StaticResourceAssertUnitTests

    - name: Run Release Unit Tests
      working-directory: ${{github.workspace}}\build\StaticResourceAssertUnitTests
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: .\Release\StaticResourceAssertUnitTests.exe

    - name: Create build directories
      run: |
        cp build\StaticResourceAssert\Release\sra.exe .

    - name: Create release artifact
      uses: actions/upload-artifact@v4
      with:
        name: sra-release
        path: |
            Readme.md
            License.txt
            sra.exe
            StaticResourceAssert\templates\*
        retention-days: 1